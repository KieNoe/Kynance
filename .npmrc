# 使用 pnpm 的工作区功能
shared-workspace-lockfile=true

# 启用严格的 peerDependencies 检查，有助于避免版本冲突
strict-peer-dependencies=true


# 设置 node_modules 的链接策略（默认为 "isolated"，推荐使用 "hoisted" 提升依赖）
node-linker=hoisted

# 不自动生成 package-lock.json，而是使用 pnpm-lock.yaml
package-lock=false

# 开启 pnpm 的自动安装
auto-install-peers=true

# 注册表地址，默认使用 npm 官方源；可换为公司内网源（如 Nexus、Verdaccio）
registry=https://registry.npmjs.org/

# 缓存目录（默认在用户主目录中）
# store-dir=.pnpm-store

# 设置每个 workspace 包默认发布的访问权限（建议私有包使用 restricted）
# "public" 表示对所有人可见
access=public

# 禁止尝试去找 legacy peer dependencies（让行为更稳定）
legacy-peer-deps=false

# 开启插件支持（如 pnpm plugin 可用于多种高级用途）
enable-pre-post-scripts=true

# 设置 pnpm 安装时输出的详细程度（"silent"、"error"、"warn"、"info"、"debug"）
reporter=default

# 如果你部署 CI/CD，建议禁用 pnpm 缓存一致性校验以避免缓存误判失败
# prefer-offline=true
# frozen-lockfile=true

# 如果你发布包，可指定默认的 npm 发布 tag（比如 beta、next、latest）
tag=latest
